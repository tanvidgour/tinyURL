name: Docker Build and Deploy

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/tinyurl-app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' # Only deploy from main branch
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to server
        # Here you would add steps to deploy to your server
        # This is a placeholder - customize based on your deployment method
        run: |
          echo "Deploying to production server..."
          # Example: SSH into server and pull/run the latest image
          # uses: appleboy/ssh-action@master
          # with:
          #   host: ${{ secrets.SERVER_HOST }}
          #   username: ${{ secrets.SERVER_USERNAME }}
          #   key: ${{ secrets.SERVER_SSH_KEY }}
          #   script: |
          #     docker pull ghcr.io/${{ github.repository }}/tinyurl-app:latest
          #     docker-compose up -d 